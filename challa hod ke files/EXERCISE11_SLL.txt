EXERCISE 12 : WRITE A PYTHON CODE SNIPPET TO DELETE NODES FROM THE BEGINING AND END.
CODE SNIPPET : 
class Node :
    def __init__(self,data):
        self.data = data
        self.next = None
class Sll:
    def __init__(self):
        self.head=None

    def delete_beg(self):
        temp = self.head
        self.head = temp.next
        temp.next = None

    def delete_end(self):
        prev = self.head
        temp = self.head.next
        while temp.next is not None:
            temp = temp.next
            prev = prev.next
        prev.next = None


    def display(self):
        if self.head is None:
            print("Linked list is Empty ")
        else:
            temp = self.head
            while temp:
                print(temp.data,"-->", end = " ")
                temp = temp.next
l = Sll()
n1 = Node(100)
l.head = n1
n2 = Node(200)
n1.next = n2
n3 = Node(300)
n2.next = n3
l.delete_beg()
l.delete_end()
l.display()
								OUTPUT 
                                                   200 --> 
